[gd_scene load_steps=3 format=2]

[sub_resource type="GDScript" id=5]
script/source = "extends Spatial

export(float) var speed :float = 0.0 
export(float) var hight :float = 1.0
export(float) var distance : float = 1.0

var count :float = 0.0
var on_floor :bool = true
var s_i : float = 0.0
var s_f :float = 0.0
var pivot_y :float = 0.0

const gravity :float  = 9.8

func _ready():
	$on_floor.force_raycast_update()
	pivot_y = $mesh.get_transformed_aabb().size.y/2.0
	s_i =  $on_floor.get_collision_point().y  + pivot_y
	s_f = s_i 

func _unhandled_input(event):
	if event is InputEventScreenTouch and not event.is_pressed():
		jump()

func _process(delta):

	anim_jump(delta)

func anim_jump(var delta: float):
	if not on_floor:
		count += speed * delta
		
		var h = hight / pow(distance/2.0,2.0)
		var sqr = distance * count -pow(count , 2.0)
		
		transform.origin.y = s_i + sqr * h

		if transform.origin.y - pivot_y - $on_floor.get_collision_point().y < 0.1:
			on_floor = true
			count = 0
		print_debug(\"not on floor\")
	else:
		if  transform.origin.y - pivot_y - $on_floor.get_collision_point().y > 0.1:
			s_f -= gravity * delta
			print_debug(\"in grabity\")
		elif not $on_floor.get_collider() == null:
			s_f = $on_floor.get_collision_point().y  + pivot_y
			print_debug(\"update space final\")
		transform.origin.y = s_f

func jump():
	on_floor = false
	s_i = s_f
"

[sub_resource type="CapsuleMesh" id=1]

[node name="player" type="Spatial"]
script = SubResource( 5 )
speed = 2.0
hight = 8.0

[node name="mesh" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0, 0 )
mesh = SubResource( 1 )

[node name="on_floor" type="RayCast" parent="."]
enabled = true
cast_to = Vector3( 0, -10, 0 )
collide_with_areas = true
collide_with_bodies = false
debug_shape_custom_color = Color( 0, 0.156863, 1, 1 )

[node name="forward" type="RayCast" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -1 )
enabled = true
cast_to = Vector3( 0, -10, 0 )
collide_with_areas = true
collide_with_bodies = false
debug_shape_custom_color = Color( 0.290196, 1, 0, 1 )

[node name="backward" type="RayCast" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1 )
enabled = true
cast_to = Vector3( 0, -10, 0 )
collide_with_areas = true
collide_with_bodies = false
debug_shape_custom_color = Color( 0.290196, 1, 0, 1 )
